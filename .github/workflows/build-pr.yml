name: Bygg pull request

on: [pull_request]

env:
  ORACLE_IMAGE: docker.pkg.github.com/navikt/vtp/foreldrepenger-oracle
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/fp-sak
  TZ: "Europe/Oslo"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Brukes ukenummer i cache_key da pomene endrer seg alt for ofte.
      # Alternative key med cache fra forrige uke som blir lagret etterpÃ¥ under CACHE_KEY.
      - name: Set cache key
        run: |
          echo "::set-env name=CACHE_KEY::$(expr $(date +%V) - 1 + 1)"
          echo "::set-env name=PREVIOUS_CACHE_KEY::$(expr $(date +%V) - 1)"
      - uses: actions/cache@v1.1.2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ env.CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ env.PREVIOUS_CACHE_KEY }}
      - uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Hent og start Oracle image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: oracle
        shell: bash
        run: |
          echo  $GITHUB_TOKEN | docker login --username "x-access-token" --password-stdin https://docker.pkg.github.com
          echo "Henter og starter Oracle image $ORACLE_IMAGE"
          docker-compose -f oracle/docker-compose.yml pull
          rm -f nohup.out
          docker-compose -f oracle/docker-compose.yml up oracle >nohup.out 2>&1 &
          sh -c 'tail -n +0 -f nohup.out | { sed "/Disconnected/q" && kill $$; }' || true

      - name: Set build version
        run: |
          echo "::set-env name=BUILD_VERSION::$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Build artifacts & deploy
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          echo "Building artifacts $BUILD_VERSION"
          mvn jacoco:prepare-agent install --quiet -e --batch-mode --settings ./.m2/settings.xml -Dchangelist= -Dsha1=-${BUILD_VERSION} -Dfile.encoding=UTF-8 -Djacoco.destFile=$(pwd)/target/jacoco.exec -Pgithub
          echo "Build artifacts"
          echo "::set-env name=TAG::$(mvn help:evaluate --batch-mode --settings ./.m2/settings.xml --file .flattened -Dexpression=project.version -q -DforceStdout)"

      - name: Bygg og push docker-image
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_ACCESS_TOKEN }}
        run: |
          docker build --pull --tag ${IMAGE_BASE}:${TAG} --tag ${IMAGE_BASE}:latest .
          echo "$GITHUB_PASSWORD" | docker login --username "$GITHUB_USERNAME" --password-stdin https://docker.pkg.github.com
          docker push ${IMAGE_BASE}:latest
          docker push ${IMAGE_BASE}:${TAG}

      - name: Trigger bygg og push docker-image for bruk i test
        if: success()
        shell: bash
        run: |
          curl -XPOST -u "x-access-token:${{secrets.GITHUB_ACCESS_TOKEN}}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          https://api.github.com/repos/navikt/fp-sak/dispatches \
          --data '{"event_type": "fpsak-docker-image-for-test",
                   "client_payload": {
                      "trigger": "${{ github.repository }}",
                      "version": "${{ env.TAG }}",
                      "image": "${{ env.IMAGE_BASE }}"
                  }}'
